# Monitorix-board

A modern centralized dashboard for all your server monitoring with [Monitorix](https://github.com/mikaku/Monitorix).

![Sample screenshot](/screenshot.png?raw=true "Sample screenshot")

(Monitorix-board is released in English. The screenshot displays a customized installation).

## About Monitorix-board

Monitorix-board fetches the monitoring data collected by Monitorix in your servers and combines them into a single comprehensible chart for every metric. Monitorix-board provides **a modern and fully customizable centralized web frontend** designed to the delight of system administrators with attitude.

By combining every metric from multiple servers into a single chart, Monitorix-board allows easier surveillance, comparison and correlation of system health and resource usage, in a fraction of time and screen estate.

Monitorix-board provides similar functionality to [Monitorix multihost](http://www.monitorix.org/documentation.html#46), without most of it's inconveniences.


## Features ##

1. **Usable**: Charts are generated by a cronjob in the background, no forms to fill.
2. **Fully customizable**: add, remove, rename, reorder or translate your dashboard's charts from a simple JSON configuration file. Adapt the look and feel to your wish from a single CSS file.
3. **Universal**: Monitorix-board is written in JavaScript and runs in the client's browser. No server-side scripting (PHP, Ruby, Perl...) dependencies.
4. **Modern**: Large charts and fonts, to take advantage of today's screen sizes.

## About Monitorix

[Monitorix](https://github.com/mikaku/Monitorix) is a free, open source, lightweight system monitoring tool. It consists of two parts: a **collector**, which is a daemon that measures many services and system resources storing their real-time values in a database (using [RRDtool](https://github.com/oetiker/rrdtool-1.x)), and **a CGI script** accesible via a built-in web server, which generates charts and provides a simple web interface to visualize the metrics from a web browser. See [monitorix.org](http://monitorix.org) for the details.


## How it works
Monitorix' daemon collects system and services data in the background and stores their values in `.rrd` files, usually located under `/var/lib/monitorix/`. Monitorix-board consists of two parts:

1. **A cronjob**, which fetches these databases periodically from the remote servers being monitored, and generates combined charts for every metric.
2. **A HTML5 frontend**, which builds a customizable dashboard in the user's browser, with the charts embedded.


## Requeriments

1. [RRDtool](https://github.com/oetiker/rrdtool-1.x), installable via `yum install rrdtool` (CentOS, Fedora...) or `apt-get install rrdtool` (Debian, Ubuntu...)
2. [Monitorix](https://github.com/mikaku/Monitorix) running in each server you want to centralize.
3. A JavaScript-enabled browser.


## Setup
1. Expose your `.rrd` files to Monitorix built-in web server by making symlinks:

   ```
   cd /var/lib/monitorix
   mkdir www/private
   for i in *rrd; do ln -s ../../$i www/private/$i; done
   ```
2. Rename `scripts/config.default.js` to `config.js` and customize it.
3. Rename `private/cronjob.default.sh` to `cronjob.sh` and customize it.
4. Set up your cronjob to run `private/cronjob.sh` every 15 minutes.
5. Deploy Monitorix-board to a web host by just copying the contents of `httpdocs` to your server's document root.

## Important notes

Be advised that you will be exposing your RRD databases to the world unless you have **set up your `iptables`, firewall or Monitorix' built-in web server to deny access to all IP addresses except these on your trusted network**.

Fetching your RRD files and generating the charts may require a non-negligible amount of system resources, particularly bandwidth and CPU usage. Thus, set up the cronjob to run on a conservative schedule (15 minutes by default).
